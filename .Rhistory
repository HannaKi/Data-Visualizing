mapping = aes(x = log(gdpPercap), y = lifeExp))
p1 <- p0 + geom_point(alpha = 0.2) +
geom_smooth(method = "lm", aes(color = "OLS", fill = "OLS"))
p1 + scale_color_manual(name = "Models", values = model_colors) +
scale_fill_manual(name = "Models", values = model_colors) +
theme(legend.position = "top")
model_colors <- RColorBrewer::brewer.pal(3, "Set1")
model_colors
p0 <- ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap), y = lifeExp))
p1 <- p0 + geom_point(alpha = 0.2) +
geom_smooth(method = "lm", aes(color = "OLS", fill = "OLS")) +
geom_smooth(method = "lm", formula = y ~ splines::bs(x, df = 3),
aes(color = "Cubic Spline", fill = "Cubic Spline")) +
geom_smooth(method = "loess",
aes(color = "LOESS", fill = "LOESS"))
p1 + scale_color_manual(name = "Models", values = model_colors) +
scale_fill_manual(name = "Models", values = model_colors) +
theme(legend.position = "top")
View(gapminder)
min_gdp <- min(gapminder$gdpPercap)
max_gdp <- max(gapminder$gdpPercap)
med_pop <- median(gapminder$pop)
pred_df <- expand.grid(gdpPercap = (seq(from = min_gdp,
to = max_gdp,
length.out = 100)),
pop = med_pop,
continent = c("Africa", "Americas",
"Asia", "Europe", "Oceania"))
pred_out <- predict(object = out,
newdata = pred_df,
interval = "predict")
head(pred_out)
pred_df <- cbind(pred_df, pred_out)
head(pred_df)
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")),
aes(x = gdpPercap,
y = fit, ymin = lwr, ymax = upr,
color = continent,
fill = continent,
group = continent))
p
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")),
aes(x = gdpPercap,
y = fit, ymin = lwr, ymax = upr,
color = continent,
fill = continent,
group = continent))
p + geom_point(data = subset(gapminder,
continent %in% c("Europe", "Africa")),
aes(x = gdpPercap, y = lifeExp,
color = continent),
alpha = 0.5)
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")),
aes(x = gdpPercap,
y = fit, ymin = lwr, ymax = upr,
color = continent,
fill = continent,
group = continent))
p + geom_point(data = subset(gapminder,
continent %in% c("Europe", "Africa")),
aes(x = gdpPercap, y = lifeExp,
color = continent),
alpha = 0.5,
inherit.aes = FALSE) +
geom_line() +
geom_ribbon(alpha = 0.2, color = FALSE) +
scale_x_log10(labels = scales::dollar)
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")),
aes(x = gdpPercap,
y = fit, ymin = lwr, ymax = upr,
color = continent,
fill = continent,
group = continent))
p + geom_point(data = subset(gapminder,
continent %in% c("Europe", "Africa")),
aes(x = gdpPercap, y = lifeExp,
color = continent),
alpha = 0.5) +
geom_line() +
geom_ribbon(alpha = 0.2, color = FALSE) +
scale_x_log10(labels = scales::dollar)
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")),
aes(x = gdpPercap,
y = fit, ymin = lwr, ymax = upr,
color = continent,
fill = continent,
group = continent))
p + geom_line()
p + geom_line()+
geom_ribbon(alpha = 0.2, color = FALSE) +
scale_x_log10(labels = scales::dollar)
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")),
aes(x = gdpPercap,
y = fit, ymin = lwr, ymax = upr,
color = continent,
fill = continent,
group = continent))
p + geom_line()+
geom_ribbon(alpha = 0.2, color = FALSE) +
scale_x_log10(labels = scales::dollar)
p + geom_line()+
geom_ribbon(alpha = 0.2) +
scale_x_log10(labels = scales::dollar)
p + geom_line()+
geom_ribbon(alpha = 0.2, color = FALSE)
p + geom_line()+
geom_ribbon(alpha = 0.2, color = FALSE) +
scale_x_log10(labels = scales::dollar)
p + geom_line()+
geom_ribbon(alpha = 0.2, color = FALSE)
## Onpa hienoa!
## By defult, show code for all chunks in the knitted document,
## as well as the output. To override for a particular chunk
## use echo = FALSE in its options.
knitr::opts_chunk$set(echo = TRUE)
## Set the default size of figures
knitr::opts_chunk$set(fig.width=8, fig.height=5)
## Load the libraries we will be using
library(gapminder)
library(here)
library(socviz)
library(tidyverse)
# eli edellisen kappaleen ylapuolella on
# koodia, jota ei tulosteta html-tiedostoon
gapminder
# Ctrl+Alt+I Windowsilla antaa tallaisen koodipalan. (Enta Linux?)
summary(gapminder)
colnames(gapminder)
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
size = pop,
color = continent)) +
geom_point() +
coord_cartesian() +
scale_x_log10() +
labs(x = "log GDP", y = "Life expectancy",
title = "kuvaaja")
# piirra tulostamalla "p"
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "purple"))+
geom_point() +
geom_smooth(method = "loess") +
scale_x_log10() +
labs(title = "aes-funktioon annettu varimaarittely VaaRIN.", subtitle = "ggplotille annetaan vain datan muutujia, nyt se on luonut kokonaan uuden muuttujan, 'purple'")
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(color = "purple") +
geom_smooth(method = "loess") +
scale_x_log10() +
labs(title = "Varin voi maarittaa geom-funktiolle mutta se ei tuo tassa lisaa tietoa")
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(alpha = 0.3) +
geom_smooth(color = "orange", se = FALSE, size = 8, method = "lm") +
scale_x_log10()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y=lifeExp))
p+  geom_point(alpha = 0.3) +
geom_smooth(method = "gam") +
scale_x_log10(labels = scales::dollar) +
labs(x = "GDP Per Capita", y = "Life Expectancy in Years",
title = "Economic Growth and Life Expectancy",
subtitle = "Data points are country-years",
caption = "Source: Gapminder.")
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent,
fill = continent))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point(mapping = aes(color = continent)) +
geom_smooth(method = "loess") +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(mapping = aes(color = log(pop))) +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp)) +
geom_point(mapping = aes(color = log(pop))) +
scale_x_log10()
ggsave(here("output", "figures", "testikuvaaja.png"), plot = p)
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point(mapping = aes(color = continent)) +
geom_smooth(method = "loess") +
scale_x_log10() +
labs(title = "Alkuperainen kuvaaja")
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_log10() +
labs(title = "geom_smooth ennen geom_pointia")
p <- ggplot(data = gapminder, mapping = aes(x = pop, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_log10() +
labs(title = "Elinaika suhteessa populaatioon")
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_y_log10()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_sqrt()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_reverse()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent))
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = year)) +
scale_x_log10() +
labs(title="varimaareena vuosi eika manner")
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = factor(year))) +
scale_x_log10() +
labs(title="varimaareena vuosi eika manner HUOM! factor(year)!!!!")
gapminder2 <- filter(gapminder, year == 2007)
p <- ggplot(data = gapminder2, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = year,
y = gdpPercap))
p + geom_line(aes(group=country))
p <- ggplot(data = gapminder, mapping = aes(x = year, y = gdpPercap))
p + geom_line(aes(group = country)) + facet_wrap(~ continent)
p <- ggplot(gapminder, aes(year, gdpPercap)) + geom_line(color = "gray", aes(group = country)) + geom_smooth(method = loess, se = F) + scale_y_log10(labels=scales::dollar) + facet_wrap(~ continent, ncol = 5) + labs(x= "vuosi", y = "BKT/hlö", title="BKT henkilöa kohden viidella mantereella")
# + theme(axis.title.x = element_text(angle = 90, vjust = 0.25))
# Miten muokataan fasettien akseleita?
p
ggsave(here("output", "figures", "BKT_per_hlo_mantereittain.jpg"), plot = p)
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(alpha = 0.3) +
geom_smooth(color = "orange", se = FALSE, method = "lm") +
scale_x_log10()+facet_wrap(~continent)
p <- ggplot(data = gss_sm, aes(age, childs))
p + geom_point(alpha = 0.2)+geom_smooth()+facet_grid(sex~race)
p <- ggplot(data = gss_sm, aes(age, childs))
p + geom_point(alpha = 0.2)+geom_smooth()+facet_grid(sex~race~obama)
p <- ggplot(gss_sm, aes(x=bigregion))
p + geom_bar(mapping = aes(fill=bigregion))
p <- ggplot(gss_sm, aes(x=bigregion))
p + geom_bar(mapping = aes(y = ..prop.., fill=bigregion)) + labs(title="Tassa muuttuja ei summaudu yhteen", subtitle = "Vaan jokainen arvo summautuu yhteen")
p <- ggplot(gss_sm, aes(bigregion))
p + geom_bar(color= "blue", fill= "orange", mapping = aes(y=..prop.., group=1))
p <- ggplot(gss_sm, mapping = aes(bigregion, fill = religion))
p + geom_bar()
p <- ggplot(gss_sm, mapping = aes(bigregion, fill = religion))
p + geom_bar(position = "fill")
p <- ggplot(gss_sm, mapping = aes(bigregion, fill = religion))
p + geom_bar(position = "dodge")
p <- ggplot(gss_sm, mapping = aes(bigregion, fill = religion))
p + geom_bar(position = "dodge", mapping = aes(y=..prop..,group=religion))
p <- ggplot(gss_sm, mapping = aes(religion))
p + geom_bar(position = "dodge", mapping = aes(y=..prop.., group = bigregion)) + facet_wrap(~bigregion)
p <- ggplot(midwest, mapping = aes(x=area))
p + geom_histogram()
p <- ggplot(midwest, mapping = aes(x=area))
p + geom_histogram(bins = 10)
oh_wi <- c("OH", "WI")
p <- ggplot(data = subset(midwest, subset = state %in% oh_wi),
mapping = aes(x = percollege, fill = state))
p + geom_histogram(alpha = 0.4, bins = 20)
p <- ggplot(midwest, mapping = aes(x=area))
p + geom_density()
p <- ggplot(midwest, mapping = aes(area, fill=state, color = state))
p + geom_density(alpha = 0.3)
p <- ggplot(midwest, mapping = aes(x=area,  color = state))
p + geom_line(stat = "density")
p <- ggplot(data = subset(midwest, subset = state %in% oh_wi),
mapping = aes(x = area, fill = state, color = state))
p + geom_density(alpha = 0.3, mapping = (aes(y = ..scaled..)))
glimpse(oecd_sum)
p <- ggplot(data = oecd_sum,
mapping = aes(x = year, y = diff, fill = hi_lo))
p + geom_col() + guides(fill = FALSE) +
labs(x = NULL, y = "Difference in Years",
title = "The US Life Expectancy Gap",
subtitle = "Difference between US and OECD average life expectancies, 1960-2015",
caption = "Data: OECD. After a chart by Christopher Ingraham,
Washington Post, December 27th 2017.")
rel_by_region <- gss_sm %>%
group_by(bigregion, religion) %>%
summarize(N = n()) %>%
mutate(freq = N / sum(N),
pct = round((freq*100), 0))
head(gss_sm)
head(rel_by_region)
rel_by_region %>% group_by(bigregion) %>% summarize(total = sum(pct))
p <- ggplot(rel_by_region, aes(bigregion, pct, fill = religion))
p + geom_col(position = "dodge")
p <- ggplot(rel_by_region, aes(bigregion, pct, fill = religion))
p + geom_col(position = "dodge2") +
labs(x = "Alue", y = "Osuus", fill= "Uskonto") + theme(legend.position = "top")
p <- ggplot(rel_by_region, aes(religion, pct, fill = religion))
p + geom_col(position = "dodge2") +
labs(x = "Alue", y = "Osuus", fill= "Uskonto") + facet_grid(~bigregion) + coord_flip()+ guides(fill = F)
p <- ggplot(organdata, mapping = aes(year, donors))
p + geom_line() + facet_wrap(~country)
p <- ggplot(organdata, mapping = aes(x=country, y=donors))
p+geom_boxplot() + coord_flip()
p <- ggplot(organdata, mapping = aes(x= reorder(country, donors, na.rm = T), y=donors))
p+geom_boxplot() + coord_flip() + labs(x=NULL)
p <- ggplot(data = organdata,
mapping = aes(x = reorder(country, donors, na.rm=TRUE),
y = donors, fill = world))
p + geom_boxplot() + labs(x=NULL) +
coord_flip() + theme(legend.position = "top")
p <- ggplot(data = organdata,
mapping = aes(x = reorder(country, donors, na.rm=TRUE),
y = donors, color = world))
p + geom_jitter(position = position_jitter(width=0.15)) + labs(x=NULL) +
coord_flip() + theme(legend.position = "top")
by_country <- organdata %>% group_by(consent_law, country) %>%
summarize(donors_mean= mean(donors, na.rm = TRUE),
donors_sd = sd(donors, na.rm = TRUE),
gdp_mean = mean(gdp, na.rm = TRUE),
health_mean = mean(health, na.rm = TRUE),
roads_mean = mean(roads, na.rm = TRUE),
cerebvas_mean = mean(cerebvas, na.rm = TRUE))
head(by_country)
by_country <- organdata %>% group_by(consent_law, country) %>% summarize_if(is.numeric, list(mean, sd), na.rm=T) %>% ungroup
p <- ggplot(by_country, mapping = aes(x= donors_fn1, y=reorder(country, donors_fn1), color = consent_law))
p + geom_point() + labs(y = NULL, x= "Elinluovuttajien keskiarvo", color = "Laki") + theme(legend.position = "top")
p <- ggplot(data = by_country,
mapping = aes(x = donors_fn1,
y = reorder(country, donors_fn1)))
p + geom_point(size=3) +
facet_wrap(~ consent_law, scales = "free_y", ncol = 1) +
labs(x= "Donor Procurement Rate",
y= "")
p <- ggplot(by_country, mapping=aes(x = reorder(country, donors_fn1), y=donors_fn1))
p + geom_pointrange(mapping = aes(ymin=donors_fn1 - donors_fn2, ymax= donors_fn1 + donors_fn2)) + coord_flip() + labs(x=NULL, y = "elinluovuttajat")
p <- ggplot(by_country, aes(roads_fn1, donors_fn1))
p + geom_point() + geom_text(aes(label = country))
p <- ggplot(by_country, aes(roads_fn1, donors_fn1))
p + geom_point() + geom_text(aes(label = country), hjust=0)
library(ggrepel)
elections_historic %>% select(2:7)
p_title <- "Presidential Elections: Popular & Electoral College Margins"
p_subtitle <- "1824-2016"
p_caption <- "Data for 2016 are provisional."
x_label <- "Winner's share of Popular Vote"
y_label <- "Winner's share of Electoral College Votes"
p <- ggplot(elections_historic, aes(popular_pct, ec_pct, label = winner_label))
p + geom_hline(yintercept = 0.5, size = 1.4, color = "gray") + geom_vline(xintercept = 0.5, sixe = 1.4, color = "gray") + geom_point() + geom_text_repel() + scale_x_continuous(labels = scales::percent_format(accuracy = 1)) + scale_y_continuous(labels = scales::percent_format(accuracy = 1)) + labs(x = x_label, y = y_label, title = p_title, subtitle = p_subtitle,
caption = p_caption)
p <- ggplot(by_country, aes(gdp_fn1, health_fn1))
p + geom_point() + geom_text_repel(data = subset(by_country, gdp_fn1>25000), mapping = aes(label = country))
p <- ggplot(data = by_country,
mapping = aes(x = gdp_fn1, y = health_fn1))
p + geom_point() +
geom_text_repel(data = subset(by_country,
gdp_fn1 > 25000 | health_fn1 < 1500 |
country %in% "Belgium"),
mapping = aes(label = country))
organdata$ind <- organdata$ccode %in% c("Ita", "Spa")
p <- ggplot(data = organdata,
mapping = aes(x = roads,
y = donors, color = ind))
p + geom_point() + geom_text_repel(data = subset(organdata, ind), aes(label = ccode)) + guides(label = F, color = F)
p <- ggplot(data = organdata, mapping = aes(x = roads, y = donors))
p + geom_point() + annotate(geom = "text", x = 91, y = 33,
label = "A surprisingly high \n recovery rate.",
hjust = 0)
p <- ggplot(organdata, aes(roads, donors))
p + geom_point() + annotate(geom = "rect", xmin=125, xmax=155, ymin=30, ymax=35, fill="orange", alpha = 0.3) + annotate(geom= "text", x = 157, y= 33, label= "Yllattavan korkea \n selviytymisaste", hjust = 0)
p <- ggplot(data = organdata,
mapping = aes(x = roads,
y = donors,
color = world))
p + geom_point()
p <- ggplot(data = organdata,
mapping = aes(x = roads,
y = donors,
color = world))
p + geom_point() +
scale_x_log10() +
scale_y_continuous(breaks = c(5, 15, 25),
labels = c("Five", "Fifteen", "Twenty Five"))
p <- ggplot(data = organdata,
mapping = aes(x = roads,
y = donors,
color = world))
p + geom_point() +
scale_color_discrete(labels =
c("Corporatist", "Liberal",
"Social Democratic", "Unclassified")) +
labs(x = "Road Deaths",
y = "Donor Procurement",
color = "Welfare State")
p <- ggplot(gapminder, aes(x = log(gdpPercap), y = lifeExp))
p + geom_point(alpha=0.1) + geom_smooth(color = "tomato", fill = " tomato", method = MASS::rlm) + geom_smooth(color = "blue", fill="blue", method = "lm")
p + geom_point(alpha=0.1) +
geom_smooth(color = "purple", method = "lm", size = 1.2,
formula = y ~ splines::bs(x, 3), se = FALSE)
p + geom_point(alpha=0.1) +
geom_quantile(color = "green", size = 1.2, method = "rqss",
lambda = 1, quantiles = c(0.20, 0.5, 0.85))
model_colors <- RColorBrewer::brewer.pal(3, "Set1")
model_colors
p0 <- ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap), y = lifeExp))
p1 <- p0 + geom_point(alpha = 0.2) +
geom_smooth(method = "lm", aes(color = "OLS", fill = "OLS")) +
geom_smooth(method = "lm", formula = y ~ splines::bs(x, df = 3),
aes(color = "Cubic Spline", fill = "Cubic Spline")) +
geom_smooth(method = "loess",
aes(color = "LOESS", fill = "LOESS"))
p1 + scale_color_manual(name = "Models", values = model_colors) +
scale_fill_manual(name = "Models", values = model_colors) +
theme(legend.position = "top")
out <- lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
summary(out)
names(out)
str(out)
min_gdp <- min(gapminder$gdpPercap)
max_gdp <- max(gapminder$gdpPercap)
med_pop <- median(gapminder$pop)
pred_df <- expand.grid(gdpPercap = (seq(from = min_gdp,
to = max_gdp,
length.out = 100)),
pop = med_pop,
continent = c("Africa", "Americas",
"Asia", "Europe", "Oceania"))
pred_out <- predict(object = out,
newdata = pred_df,
interval = "predict")
head(pred_out)
pred_df <- cbind(pred_df, pred_out)
head(pred_df)
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")),
aes(x = gdpPercap,
y = fit, ymin = lwr, ymax = upr,
color = continent,
fill = continent,
group = continent))
p + geom_point(data = subset(gapminder,
continent %in% c("Europe", "Africa")),
aes(x = gdpPercap, y = lifeExp,
color = continent),
alpha = 0.5,
inherit.aes = FALSE) +
geom_line() +
geom_ribbon(alpha = 0.2, color = FALSE) +
scale_x_log10(labels = scales::dollar)
library(broom)
out_comp <- out %>% tidy() %>% round_df()
out_comp
p <- ggplot(out_comp, aes(x = term, y= estimate)) +
geom_point() + coord_flip()
p
out_conf <- out %>% tidy(conf.int = T) %>% round_df()
out_conf
47.81+0.34
out_conf <- out_conf %>% subset(term %nin% "(Intercept") %>% mutate(nicelabs = prefix_strip(out_conf$term, "continent"))
out_conf
out_conf <- out_conf %>% subset(term %nin% "(Intercept") %>% mutate(nicelabs = prefix_strip(out_conf$term, "continent"))
out_conf
out_conf <- subset(out_conf, term %nin% "(Intercept")
out_conf
out_conf <- subset(out_conf, term %nin% "(Intercept"))
out_conf <- subset(out_conf, term %nin% "(Intercept)")
out_conf
out_conf <- out_conf %>% subset(term %nin% "(Intercept)") %>% mutate(nicelabs = prefix_strip(out_conf$term, "continent"))
out_conf
p <- ggplot(out_conf, aes(x=reorder(nicelabs, estimate), y=estimate, ymin=conf.low, ymax = conf.high)) +
geom_pointrange()
p
p <- ggplot(out_conf, aes(x=reorder(nicelabs, estimate), y=estimate, ymin=conf.low, ymax = conf.high)) +
geom_pointrange() + coord_flip() + labs(x="", y="OLS Estimate")
p
p <- ggplot(out_conf, aes(x=reorder(nicelabs, estimate), y=estimate, ymin=conf.low, ymax = conf.high)) +
geom_pointrange() + coord_flip() + labs(x="", y="OLS Estimate")
p
out_aug <- augment(out)
head(out_aug) %>% round_df()
28.8+27.6
mean(out_aug$▲.se.fit)
mean(out_aug$'.se.fit')
View(out_aug)
2.586027e-10
p <- ggplot(out_aug, aes(x = .fitted, y = .resid)) + geom_point()
p
p <- ggplot(out_aug, aes(x = .fitted, y = .resid, fill = continent)) + geom_point()
p
p <- ggplot(out_aug, aes(x = .fitted, y = .resid, color = continent)) + geom_point()
p
out_le <- gapminder %>% group_by(country, year) %>% nest()
out_le
