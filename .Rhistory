model<-tree(obama~.,data=muuttujat) plot(model)
model<-tree(obama~.,data=muuttujat)
plot(model)
text(model)
model<-tree(obama~.,data=muuttujat)
plot(model)
text(model)
help("text")
fit<-tree(obama~.,data=muuttujat)
summary()
fit <- tree(obama~., data = muuttujat)
summary(fit)
plot(fit)
text(fit)
p <- plot(fit)
text(p)
text(p, pretty=0)
plot(fit)
text(fit,splits = TRUE)
str(tree)
str(fit)
class(fit)
plot.new()
plot(fit)
text(fit, splits = TRUE)
plot(fit)
text(fit, splits = TRUE)
plot(fit)
quartz()
plot.new()
plot(fit)
plot(fit)
text(fit, splits = TRUE)
library(tree)
fit <- tree(obama~., data = muuttujat)
summary(fit)
plot(fit)
text(fit, splits = TRUE)
library(tree)
fit <- tree(obama~., data = muuttujat)
summary(fit)
plot(fit)
text(fit, splits = TRUE)
# interaktioiden tutkimiseeen: http://www3.imperial.ac.uk/pls/portallive/docs/1/1171924.PDF
fit
fit2 <- tree(obama~., data = gss_sm)
summary(fit2)
str(gss_sm)
View(gss_sm)
fit2 <- tree(obama~., data = subset(gss_sm, -pres12)
)
help("subset")
fit2 <- tree(obama~., data = subset(gss_sm, select = -pres12)
)
summary(fit2)
tree(fit2)
plot(fit2)
fit2 <- tree(obama~., data = subset(gss_sm, select = -pres12))
summary(fit2)
plot(fit2)
text(fit2)
fit2 <- tree(obama~., data = subset(gss_sm, select = -pres12))
summary(fit2)
plot(fit2)
text(fit2)
knitr::opts_chunk$set(echo = TRUE)
library(tabulizer)
install.packages("tabulizer")
if(!require(pacman))install.packages("pacman")
pacman::p_load('tidyverse', 'networkD3', 'tabulizer')
knitr::opts_chunk$set(echo = TRUE)
if(!require(pacman))install.packages("pacman")
pacman::p_load('tidyverse', 'networkD3', 'tabulizer')
# library(tabulizer)
# library(tidyverse)
# library(networkD3)
url <- "https://kaupunkipyorat.hsl.fi/sites/default/files/2018-05/HSL%20Tilinp%C3%A4%C3%A4t%C3%B6s%202017.pdf"
tables <- extract_tables(url, encoding = "UTF-8")
tulosl <- tables[[16]] %>% as.data.frame()
head(tulosl)
TP2017 <- tulosl[c(1,5)]
head(TP2017)
TP2017 <- TP2017[3:nrow(TP2017), ]
colnames(TP2017) <- c("eran_nimi", "tuhatta_euroa")
head(TP2017)
incomeSta <- tables[[16]] %>% as.data.frame()
head(incomeSta)
incomeSta <- incomeSta[c(1,5)]
head(incomeSta)
knitr::opts_chunk$set(echo = TRUE)
if(!require(pacman))install.packages("pacman")
pacman::p_load('tidyverse', 'networkD3', 'tabulizer')
# library(tabulizer)
# library(tidyverse)
# library(networkD3)
url <- "https://kaupunkipyorat.hsl.fi/sites/default/files/2018-05/HSL%20Tilinp%C3%A4%C3%A4t%C3%B6s%202017.pdf"
tables <- tabulizer::extract_tables(url, encoding = "UTF-8")
incomeSta <- tables[[16]] %>% as.data.frame()
head(incomeSta)
incomeSta <- incomeSta[c(1,5)]
incomeSta <- incomeSta[3:nrow(incomeSta), ]
colnames(incomeSta) <- c("item", "thousand_euro")
head(incomeSta)
# Load energy projection data
URL <- "https://cdn.rawgit.com/christophergandrud/networkD3/master/JSONdata/energy.json"
Energy <- jsonlite::fromJSON(URL)
# Now we have 2 data frames: a 'links' data frame with 3 columns (from, to, value), and a 'nodes' data frame that gives the name of each node.
head( Energy$links )
head( Energy$nodes )
# Thus we can plot it
sankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
View(Energy$links)
View(Energy$nodes)
View(incomeSta)
View(incomeSta)
incomeSta$class <- NA
incomeSta$class <- ifelse(incomeSta$thousand_euro > 0, "in", "out")
incomeSta$class <- ifelse(incomeSta$thousand_euro > 0, c("in"), c("out"))
incomeSta$thousand_euro <- as.numeric(incomeSta$thousand_euro)
knitr::opts_chunk$set(echo = TRUE)
if(!require(pacman))install.packages("pacman")
pacman::p_load('tidyverse', 'networkD3', 'tabulizer')
# library(tabulizer)
# library(tidyverse)
# library(networkD3)
url <- "https://kaupunkipyorat.hsl.fi/sites/default/files/2018-05/HSL%20Tilinp%C3%A4%C3%A4t%C3%B6s%202017.pdf"
tables <- tabulizer::extract_tables(url, encoding = "UTF-8")
incomeSta <- tables[[16]] %>% as.data.frame()
head(incomeSta)
incomeSta <- incomeSta[c(1,5)]
incomeSta <- incomeSta[3:nrow(incomeSta), ]
colnames(incomeSta) <- c("item", "thousand_euro")
head(incomeSta)
incomeSta$thousand_euro <- as.numeric(levels(incomeSta$thousand_euro))[incomeSta$thousand_euro]
knitr::opts_chunk$set(echo = TRUE)
if(!require(pacman))install.packages("pacman")
pacman::p_load('tidyverse', 'networkD3', 'tabulizer')
# library(tabulizer)
# library(tidyverse)
# library(networkD3)
url <- "https://kaupunkipyorat.hsl.fi/sites/default/files/2018-05/HSL%20Tilinp%C3%A4%C3%A4t%C3%B6s%202017.pdf"
tables <- tabulizer::extract_tables(url, encoding = "UTF-8")
incomeSta <- tables[[16]] %>% as.data.frame()
head(incomeSta)
incomeSta <- incomeSta[c(1,5)]
incomeSta <- incomeSta[3:nrow(incomeSta), ]
colnames(incomeSta) <- c("item", "thousand_euro")
head(incomeSta)
temp <- incomeSta
help(gsub)
incomeSta$thousand_euro <- gsub(" ", "", incomeSta$thousand_euro)
temp <- incomeSta
incomeSta$thousand_euro <- as.numeric(levels(incomeSta$thousand_euro))[incomeSta$thousand_euro]
View(temp)
incomeSta <- temp
incomeSta$thousand_euro <- gsub(" ", "", incomeSta$thousand_euro)
knitr::opts_chunk$set(echo = TRUE)
if(!require(pacman))install.packages("pacman")
pacman::p_load('tidyverse', 'networkD3', 'tabulizer')
# library(tabulizer)
# library(tidyverse)
# library(networkD3)
url <- "https://kaupunkipyorat.hsl.fi/sites/default/files/2018-05/HSL%20Tilinp%C3%A4%C3%A4t%C3%B6s%202017.pdf"
tables <- tabulizer::extract_tables(url, encoding = "UTF-8")
incomeSta <- tables[[16]] %>% as.data.frame()
head(incomeSta)
incomeSta <- incomeSta[c(1,5)]
incomeSta <- incomeSta[3:nrow(incomeSta), ]
colnames(incomeSta) <- c("item", "thousand_euro")
head(incomeSta)
temp <- incomeSta
incomeSta$thousand_euro <- gsub(" ", "", incomeSta$thousand_euro)
incomeSta$thousand_euro <- as.numeric(incomeSta$thousand_euro)
View(incomeSta)
temp <- incomeSta
incomeSta$class <- NA
incomeSta$class <- ifelse(incomeSta$thousand_euro > 0, c("in"), c("out"))
incomeSta$thousand_euro <- ifelse(incomeSta$class == "in", incomeSta$thousand_euro*(1), incomeSta$thousand_euro*(-1)))
incomeSta$thousand_euro <- ifelse(incomeSta$class == "in", incomeSta$thousand_euro*(1), incomeSta$thousand_euro*(-1))
install.packages("flipPlots")
install_github("Displayr/flipPlots")
install.packages("devtools")
pacman::p_load('tidyverse', 'networkD3', 'tabulizer', 'devtools')
install_github("Displayr/flipPlots")
my.data = data.frame(Married = c("Yes","Yes", "Yes", "No", "No"),
Pet = c("Yes", "Yes", "No", "Yes", "No"),
Happy = c("Yes", "Yes", "Yes", "Yes", "No"),
freq = 5:1)
View(my.data)
flipPlots::SankeyDiagram(my.data.2[, -4],
link.color = "Source",
label.show.varname = FALSE,
weights = my.data.2$freq)
flipPlots::SankeyDiagram(my.data[, -4],
link.color = "Source",
label.show.varname = FALSE,
weights = my.data.2$freq)
flipPlots::SankeyDiagram(my.data[, -4],
link.color = "Source",
label.show.varname = FALSE,
weights = my.data$freq)
flipPlots::SankeyDiagram(my.data[, -4],
link.color = "Source",
weights = my.data$freq)
## By defult, show code for all chunks in the knitted document,
## as well as the output. To override for a particular chunk
## use echo = FALSE in its options.
knitr::opts_chunk$set(echo = TRUE)
## Set the default size of figures
knitr::opts_chunk$set(fig.width=8, fig.height=5)
## Load the libraries we will be using
library(gapminder)
library(here)
library(socviz)
library(tidyverse)
muuttujat <- select(gss_sm, obama, sex, race, polviews)
str(muuttujat)
model_colors <- RColorBrewer::brewer.pal(3, "Set1")
model_colors
p0 <- ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap), y = lifeExp))
p1 <- p0 + geom_point(alpha = 0.2) +
geom_smooth(method = "lm", aes(color = "OLS", fill = "OLS")) +
geom_smooth(method = "lm", formula = y ~ splines::bs(x, df = 3),
aes(color = "Cubic Spline", fill = "Cubic Spline")) +
geom_smooth(method = "loess",
aes(color = "LOESS", fill = "LOESS"))
p1 + scale_color_manual(name = "Models", values = model_colors) +
scale_fill_manual(name = "Models", values = model_colors) +
theme(legend.position = "top")
p <- ggplot(gapminder, aes(x = log(gdpPercap), y = lifeExp))
p + geom_point(alpha=0.1) + geom_smooth(color = "tomato", fill = " tomato", method = MASS::rlm) + geom_smooth(color = "blue", fill="blue", method = "lm")
p + geom_point(alpha=0.1) +
geom_smooth(color = "purple", method = "lm", size = 1.2,
formula = y ~ splines::bs(x, 3), se = FALSE)
p + geom_point(alpha=0.1) +
geom_quantile(color = "green", size = 1.2, method = "rqss",
lambda = 1, quantiles = c(0.20, 0.5, 0.85))
p <- ggplot(gapminder, aes(x = log(gdpPercap), y = lifeExp))
p + geom_point(alpha=0.1) + geom_smooth(color = "tomato", fill = " tomato", method = MASS::rlm) + geom_smooth(color = "blue", fill="blue", method = "lm")
p + geom_point(alpha=0.1) +
geom_smooth(color = "purple", method = "lm", size = 1.2,
formula = y ~ splines::bs(x, 3), se = FALSE)
p + geom_point(alpha=0.1) +
geom_quantile(color = "green", size = 1.2, method = "rqss",
lambda = 1, quantiles = c(0.20, 0.5, 0.85))
model_colors <- RColorBrewer::brewer.pal(3, "Set1")
model_colors
p0 <- ggplot(data = gapminder,
mapping = aes(x = log(gdpPercap), y = lifeExp))
p1 <- p0 + geom_point(alpha = 0.2) +
geom_smooth(method = "lm", aes(color = "OLS", fill = "OLS")) +
geom_smooth(method = "lm", formula = y ~ splines::bs(x, df = 3),
aes(color = "Cubic Spline", fill = "Cubic Spline")) +
geom_smooth(method = "loess",
aes(color = "LOESS", fill = "LOESS"))
p1 + scale_color_manual(name = "Models", values = model_colors) +
scale_fill_manual(name = "Models", values = model_colors) +
theme(legend.position = "top")
p <- ggplot(by_country, mapping=aes(x = reorder(country, donors_fn1), y=donors_fn1))
## Onpa hienoa!
## By defult, show code for all chunks in the knitted document,
## as well as the output. To override for a particular chunk
## use echo = FALSE in its options.
knitr::opts_chunk$set(echo = TRUE)
## Set the default size of figures
knitr::opts_chunk$set(fig.width=8, fig.height=5)
## Load the libraries we will be using
library(gapminder)
library(here)
library(socviz)
library(tidyverse)
# eli edellisen kappaleen ylapuolella on
# koodia, jota ei tulosteta html-tiedostoon
gapminder
# Ctrl+Alt+I Windowsilla antaa tallaisen koodipalan. (Enta Linux?)
summary(gapminder)
colnames(gapminder)
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
size = pop,
color = continent)) +
geom_point() +
coord_cartesian() +
scale_x_log10() +
labs(x = "log GDP", y = "Life expectancy",
title = "kuvaaja")
# piirra tulostamalla "p"
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "purple"))+
geom_point() +
geom_smooth(method = "loess") +
scale_x_log10() +
labs(title = "aes-funktioon annettu varimaarittely VaaRIN.", subtitle = "ggplotille annetaan vain datan muutujia, nyt se on luonut kokonaan uuden muuttujan, 'purple'")
p
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(color = "purple") +
geom_smooth(method = "loess") +
scale_x_log10() +
labs(title = "Varin voi maarittaa geom-funktiolle mutta se ei tuo tassa lisaa tietoa")
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(alpha = 0.3) +
geom_smooth(color = "orange", se = FALSE, size = 8, method = "lm") +
scale_x_log10()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y=lifeExp))
p+  geom_point(alpha = 0.3) +
geom_smooth(method = "gam") +
scale_x_log10(labels = scales::dollar) +
labs(x = "GDP Per Capita", y = "Life Expectancy in Years",
title = "Economic Growth and Life Expectancy",
subtitle = "Data points are country-years",
caption = "Source: Gapminder.")
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent,
fill = continent))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point(mapping = aes(color = continent)) +
geom_smooth(method = "loess") +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(mapping = aes(color = log(pop))) +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp)) +
geom_point(mapping = aes(color = log(pop))) +
scale_x_log10()
ggsave(here("output", "figures", "testikuvaaja.png"), plot = p)
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point(mapping = aes(color = continent)) +
geom_smooth(method = "loess") +
scale_x_log10() +
labs(title = "Alkuperainen kuvaaja")
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_log10() +
labs(title = "geom_smooth ennen geom_pointia")
p <- ggplot(data = gapminder, mapping = aes(x = pop, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_log10() +
labs(title = "Elinaika suhteessa populaatioon")
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_y_log10()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_sqrt()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_reverse()
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent))
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = year)) +
scale_x_log10() +
labs(title="varimaareena vuosi eika manner")
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = factor(year))) +
scale_x_log10() +
labs(title="varimaareena vuosi eika manner HUOM! factor(year)!!!!")
gapminder2 <- filter(gapminder, year == 2007)
p <- ggplot(data = gapminder2, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method = "loess") +
geom_point(mapping = aes(color = continent)) +
scale_x_log10()
p <- ggplot(data = gapminder,
mapping = aes(x = year,
y = gdpPercap))
p + geom_line(aes(group=country))
p <- ggplot(data = gapminder, mapping = aes(x = year, y = gdpPercap))
p + geom_line(aes(group = country)) + facet_wrap(~ continent)
p <- ggplot(gapminder, aes(year, gdpPercap)) + geom_line(color = "gray", aes(group = country)) + geom_smooth(method = loess, se = F) + scale_y_log10(labels=scales::dollar) + facet_wrap(~ continent, ncol = 5) + labs(x= "vuosi", y = "BKT/hlö", title="BKT henkilöa kohden viidella mantereella")
# + theme(axis.title.x = element_text(angle = 90, vjust = 0.25))
# Miten muokataan fasettien akseleita?
p
ggsave(here("output", "figures", "BKT_per_hlo_mantereittain.jpg"), plot = p)
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(alpha = 0.3) +
geom_smooth(color = "orange", se = FALSE, method = "lm") +
scale_x_log10()+facet_wrap(~continent)
p <- ggplot(data = gss_sm, aes(age, childs))
p + geom_point(alpha = 0.2)+geom_smooth()+facet_grid(sex~race)
p <- ggplot(data = gss_sm, aes(age, childs))
p + geom_point(alpha = 0.2)+geom_smooth()+facet_grid(sex~race~obama)
p <- ggplot(gss_sm, aes(x=bigregion))
p + geom_bar(mapping = aes(fill=bigregion))
p <- ggplot(gss_sm, aes(x=bigregion))
p + geom_bar(mapping = aes(y = ..prop.., fill=bigregion)) + labs(title="Tassa muuttuja ei summaudu yhteen", subtitle = "Vaan jokainen arvo summautuu yhteen")
p <- ggplot(gss_sm, aes(bigregion))
p + geom_bar(color= "blue", fill= "orange", mapping = aes(y=..prop.., group=1))
p <- ggplot(gss_sm, mapping = aes(bigregion, fill = religion))
p + geom_bar()
p <- ggplot(gss_sm, mapping = aes(bigregion, fill = religion))
p + geom_bar(position = "fill")
p <- ggplot(gss_sm, mapping = aes(bigregion, fill = religion))
p + geom_bar(position = "dodge")
p <- ggplot(gss_sm, mapping = aes(bigregion, fill = religion))
p + geom_bar(position = "dodge", mapping = aes(y=..prop..,group=religion))
p <- ggplot(gss_sm, mapping = aes(religion))
p + geom_bar(position = "dodge", mapping = aes(y=..prop.., group = bigregion)) + facet_wrap(~bigregion)
p <- ggplot(midwest, mapping = aes(x=area))
p + geom_histogram()
p <- ggplot(midwest, mapping = aes(x=area))
p + geom_histogram(bins = 10)
oh_wi <- c("OH", "WI")
p <- ggplot(data = subset(midwest, subset = state %in% oh_wi),
mapping = aes(x = percollege, fill = state))
p + geom_histogram(alpha = 0.4, bins = 20)
p <- ggplot(midwest, mapping = aes(x=area))
p + geom_density()
p <- ggplot(midwest, mapping = aes(area, fill=state, color = state))
p + geom_density(alpha = 0.3)
p <- ggplot(midwest, mapping = aes(x=area,  color = state))
p + geom_line(stat = "density")
p <- ggplot(data = subset(midwest, subset = state %in% oh_wi),
mapping = aes(x = area, fill = state, color = state))
p + geom_density(alpha = 0.3, mapping = (aes(y = ..scaled..)))
glimpse(oecd_sum)
p <- ggplot(data = oecd_sum,
mapping = aes(x = year, y = diff, fill = hi_lo))
p + geom_col() + guides(fill = FALSE) +
labs(x = NULL, y = "Difference in Years",
title = "The US Life Expectancy Gap",
subtitle = "Difference between US and OECD average life expectancies, 1960-2015",
caption = "Data: OECD. After a chart by Christopher Ingraham,
Washington Post, December 27th 2017.")
rel_by_region <- gss_sm %>%
group_by(bigregion, religion) %>%
summarize(N = n()) %>%
mutate(freq = N / sum(N),
pct = round((freq*100), 0))
head(gss_sm)
head(rel_by_region)
rel_by_region %>% group_by(bigregion) %>% summarize(total = sum(pct))
p <- ggplot(rel_by_region, aes(bigregion, pct, fill = religion))
p + geom_col(position = "dodge")
p <- ggplot(rel_by_region, aes(bigregion, pct, fill = religion))
p + geom_col(position = "dodge2") +
labs(x = "Alue", y = "Osuus", fill= "Uskonto") + theme(legend.position = "top")
p <- ggplot(rel_by_region, aes(religion, pct, fill = religion))
p + geom_col(position = "dodge2") +
labs(x = "Alue", y = "Osuus", fill= "Uskonto") + facet_grid(~bigregion) + coord_flip()+ guides(fill = F)
p <- ggplot(organdata, mapping = aes(year, donors))
p + geom_line() + facet_wrap(~country)
p <- ggplot(organdata, mapping = aes(x=country, y=donors))
p+geom_boxplot() + coord_flip()
p <- ggplot(organdata, mapping = aes(x= reorder(country, donors, na.rm = T), y=donors))
p+geom_boxplot() + coord_flip() + labs(x=NULL)
p <- ggplot(data = organdata,
mapping = aes(x = reorder(country, donors, na.rm=TRUE),
y = donors, fill = world))
p + geom_boxplot() + labs(x=NULL) +
coord_flip() + theme(legend.position = "top")
p <- ggplot(data = organdata,
mapping = aes(x = reorder(country, donors, na.rm=TRUE),
y = donors, color = world))
p + geom_jitter(position = position_jitter(width=0.15)) + labs(x=NULL) +
coord_flip() + theme(legend.position = "top")
by_country <- organdata %>% group_by(consent_law, country) %>%
summarize(donors_mean= mean(donors, na.rm = TRUE),
donors_sd = sd(donors, na.rm = TRUE),
gdp_mean = mean(gdp, na.rm = TRUE),
health_mean = mean(health, na.rm = TRUE),
roads_mean = mean(roads, na.rm = TRUE),
cerebvas_mean = mean(cerebvas, na.rm = TRUE))
head(by_country)
by_country <- organdata %>% group_by(consent_law, country) %>% summarize_if(is.numeric, list(mean, sd), na.rm=T) %>% ungroup
p <- ggplot(by_country, mapping = aes(x= donors_fn1, y=reorder(country, donors_fn1), color = consent_law))
p + geom_point() + labs(y = NULL, x= "Elinluovuttajien keskiarvo", color = "Laki") + theme(legend.position = "top")
p <- ggplot(data = by_country,
mapping = aes(x = donors_fn1,
y = reorder(country, donors_fn1)))
p + geom_point(size=3) +
facet_wrap(~ consent_law, scales = "free_y", ncol = 1) +
labs(x= "Donor Procurement Rate",
y= "")
out <- lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
summary(out)
out
str(out)
names(out)
out$df.residual
out$model
out$qr
